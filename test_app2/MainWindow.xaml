<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:custom="clr-namespace:System.IO.Ports;assembly=System"
        xmlns:viewmodels="clr-namespace:test_app2.ViewModels"
        xmlns:Converters="clr-namespace:test_app2.Converters"
        xmlns:UI="clr-namespace:test_app2.UI"
        xmlns:System="clr-namespace:System;assembly=mscorlib"
        xmlns:attached="clr-namespace:test_app2.AttachedProperties"
        xmlns:interact="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:Config="clr-namespace:test_app2.Config" x:Class="test_app2.MainWindow"
        mc:Ignorable="d"
        Closing="Window_Closing"
        Title="Конфигуратор ИКЗ" Height="720" Width="1280"
        MinHeight="720" MinWidth="1280"
        Style="{DynamicResource CustomWindowStyle}">
    <Window.Resources>
        <!--ObjectDataProvider x:Key="PortParitySettingsViewModel" 
                            MethodName="GetValues"
                            ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="custom:Parity"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="PortStopSettingsViewModel" 
                            MethodName="GetValues"
                            ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="custom:StopBits"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider-->
        <Converters:BoolToIsConnectedConverter x:Key="BoolToIsConnectedConverter"/>
        <Converters:ZeroToEmptyStringConverter x:Key="ZeroToEmptyStringConverter"/>
        <Style x:Key="GreyDataGrid" TargetType="{x:Type DataGrid}">
            <Setter Property="Foreground" Value="#FF2F2F2F"/>
        </Style>
        <Style x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}"/>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="VerticalContentAlignment"
          Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridColumnHeader}"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="Red"/>
        </Style>
    </Window.Resources>
    <Window.DataContext>
        <viewmodels:MainViewModel/>
    </Window.DataContext>
    <Grid Margin="5">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="60"/>
                <RowDefinition Height="170*"/>
            </Grid.RowDefinitions>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="160"/>
                    <ColumnDefinition Width="190"/>
                    <ColumnDefinition Width="230"/>
                    <ColumnDefinition Width="350"/>
                    <ColumnDefinition Width="180*"/>
                    <ColumnDefinition Width="180*"/>
                </Grid.ColumnDefinitions>
                <TextBlock x:Name="COMConnectionTextBlock" HorizontalAlignment="Left" Margin="10,0,0,0" TextWrapping="Wrap" Text="COM-порт:" VerticalAlignment="Center"/>
                <TextBlock x:Name="COMName" HorizontalAlignment="Right" Margin="10,0,30,0" TextWrapping="Wrap" Text="{Binding SerialPort.Settings.SelectedCOMPort}" VerticalAlignment="Center"/>
                <TextBlock x:Name="COMBaudRateTextBlock" HorizontalAlignment="Left" Margin="10,0,0,0" Grid.Column="1" TextWrapping="Wrap" Text="Скорость, бод/c:" VerticalAlignment="Center"/>
                <TextBlock x:Name="COMBaudRate" HorizontalAlignment="Right" Margin="10,0,30,0" Grid.Column="1" TextWrapping="Wrap" Text="{Binding SerialPort.Settings.SelectedBaudRate}" VerticalAlignment="Center"/>
                <TextBlock x:Name="LFIDeviceTypeTextBlock" HorizontalAlignment="Left" Margin="10,0,0,0" Grid.Column="2" TextWrapping="Wrap" Text="Тип устройства:" VerticalAlignment="Center"/>
                <TextBlock x:Name="LFIDeviceTypeModel" HorizontalAlignment="Right" Margin="10,0,30,0" Grid.Column="2" TextWrapping="Wrap" Text="{Binding IndicatorData.DeviceModel}" VerticalAlignment="Center"/>
                <TextBlock x:Name="LFIDeviceFamilyTextBlock" HorizontalAlignment="Left" Margin="10,0,0,0" Grid.Column="3" TextWrapping="Wrap" Text="Семейство устройства:" VerticalAlignment="Center"/>
                <TextBlock x:Name="LFIDeviceFamilyModel" HorizontalAlignment="Right" Margin="10,0,30,0" Grid.Column="3" TextWrapping="Wrap" Text="{Binding IndicatorData.DeviceFamily}" VerticalAlignment="Center"/>
                <!--Grid Grid.Row="5" Cursor="">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions-->
                <Button x:Name="COMOpenClosePortMainButton" Grid.Column="4"
                      Command="{Binding SerialPort.AutoConnectDisconnectCommand, Mode=OneTime}"
                      Content="{Binding SerialPort.IsConnected, Converter={StaticResource BoolToIsConnectedConverter}, UpdateSourceTrigger=PropertyChanged}" 
                      VerticalAlignment="Stretch" Margin="10,10,10,10" HorizontalAlignment="Stretch" Cursor="Hand"
                      />
                <Button x:Name="COMConfButton" Grid.Column="5"
                      Command="{Binding Config.ConfigCommand, Mode=OneTime}"
                      Content="Конфигурация" Margin="10,10,10,10" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Grid.Row="5" Cursor="Hand"
                      />
                <!--/Grid-->
            </Grid>
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="440"/>
                    <ColumnDefinition Width="5"/>
                    <ColumnDefinition Width="820*"/>
                </Grid.ColumnDefinitions>
                <Grid>
                    <Grid.RowDefinitions>
                        <!--RowDefinition Height="180*"/-->
                        <RowDefinition Height="170"/>
                        <RowDefinition Height="340*"/>
                    </Grid.RowDefinitions>
                    <!--Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions-->
                    <!--Для кнопок
                    Width="83" Background="#FFA5D6A7"
                      BorderBrush="#FF388E3C" Foreground="#FF1B5E20" BorderThickness="0,0,0,0"/-->
                    <!--Grid HorizontalAlignment="Left" VerticalAlignment="Top" Width="320" Height="210" Margin="0,0,0,480"-->
                    <!--/Grid-->
                    <Grid Grid.Row="0">
                        <GroupBox Header="Параметры для связи с индикаторами">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="30"/>
                                    <RowDefinition Height="30"/>
                                    <RowDefinition Height="30"/>
                                    <RowDefinition Height="30"/>
                                </Grid.RowDefinitions>
                                <TextBlock x:Name="CallFreqtextBlock" HorizontalAlignment="Left" TextWrapping="Wrap" Margin="5,0,0,0" Text="Адрес ИКЗ для опроса" VerticalAlignment="Center"/>
                                <TextBlock x:Name="CallAddrtextBlock" HorizontalAlignment="Left" TextWrapping="Wrap" Margin="5,0,0,0" Text="Частота ИКЗ для опроса" VerticalAlignment="Center" Grid.Row="1"/>
                                <TextBlock x:Name="CallTimetextBlock" HorizontalAlignment="Left" TextWrapping="Wrap" Margin="5" Text="Время опроса индикаторов" VerticalAlignment="Center" Grid.Row="2"/>
                                <TextBlock x:Name="WaitTimetextBlock" HorizontalAlignment="Left" TextWrapping="Wrap" Margin="5" Text="Время ожидания ответа от индикаторов" VerticalAlignment="Center" Grid.Row="3"/>
                                <TextBox x:Name="CallFreqtextBox" BorderBrush="#FF2A2A2A" HorizontalAlignment="Right" TextWrapping="Wrap" Text="{Binding IndicatorData.CallAdress, TargetNullValue='', StringFormat=d, UpdateSourceTrigger=PropertyChanged}" UI:Masking.Mask="^[0-9]+$" VerticalAlignment="Center" Width="100" Grid.Row="0" Margin="0,0,20,0"/>
                                <TextBox x:Name="CallAddrtextBox" BorderBrush="#FF2A2A2A" HorizontalAlignment="Right" TextWrapping="Wrap" Text="{Binding IndicatorData.CallFrequency, TargetNullValue='', StringFormat=d, UpdateSourceTrigger=PropertyChanged}" UI:Masking.Mask="^[0-9]+$" VerticalAlignment="Center" Width="100" Grid.Row="1" Margin="0,0,20,0"/>
                                <TextBox x:Name="CallTimetextBox" BorderBrush="#FF2A2A2A" HorizontalAlignment="Right" TextWrapping="Wrap" Text="{Binding IndicatorData.CallTime, TargetNullValue='', StringFormat=d, UpdateSourceTrigger=PropertyChanged}" UI:Masking.Mask="^[0-9]+$" VerticalAlignment="Center" Width="100" Grid.Row="2" Margin="0,0,20,0"/>
                                <TextBox x:Name="WaitTimetextBox" BorderBrush="#FF2A2A2A" HorizontalAlignment="Right" TextWrapping="Wrap" Text="{Binding IndicatorData.WaitTime, TargetNullValue='', StringFormat=d, UpdateSourceTrigger=PropertyChanged}" UI:Masking.Mask="^[0-9]+$" VerticalAlignment="Center" Width="100" Grid.Row="3" Margin="0,0,20,0"/>
                            </Grid>
                        </GroupBox>
                    </Grid>
                    <Grid Grid.Column="2" Grid.Row="2">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="175*"/>
                            <RowDefinition Height="200*"/>
                        </Grid.RowDefinitions>
                        <GroupBox x:Name="SendParamsGroupBox" Header="Данные с ИКЗ">
                            <Grid Margin="5">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="40*"/>
                                    <RowDefinition Height="5"/>
                                    <RowDefinition Height="40*"/>
                                    <RowDefinition Height="5"/>
                                    <RowDefinition Height="40*"/>
                                    <RowDefinition Height="5"/>
                                    <RowDefinition Height="40*"/>
                                </Grid.RowDefinitions>
                                <Button x:Name="ReadParametersButton" Content="Чтение данных с индикаторов" Command="{Binding IndicatorData.ReadIndicatorsBaseParametersCommand, Mode=OneTime}" 
                                        Cursor="Hand" Margin="0,0,0,0" IsEnabled="{Binding IndicatorData.FunctionCallNumStart}"/>
                                <Button x:Name="WriteParametersButton" Content="Запись данных на индикаторы" Command="{Binding IndicatorData.WriteIndicatorsBaseParametersCommand, Mode=OneTime}"
                                        Cursor="Hand" Margin="0,0,0,0" Grid.Row="2" IsEnabled="{Binding IndicatorData.FunctionCallNumStart}"/>
                                <Button x:Name="SearchButton" Content="Поиск индикаторов" Command="{Binding IndicatorData.CheckAvailibleIndicatorsCommand, Mode=OneTime}" Cursor="Hand" Margin="0,0,0,0" Grid.Row="4"/>
                                <Button x:Name="RestartIndicatorsButton" Content="Сброс индикаторов" Command="{Binding IndicatorData.RestartCommand, Mode=OneTime}"
                                        Cursor="Hand" Margin="0,0,0,0" VerticalAlignment="Stretch" Grid.Row="6" Background="Teal"/>
                            </Grid>
                        </GroupBox>
                        <GroupBox x:Name="AnalogParamsGroupBox" Header="Управление ИКЗ" Grid.Row="1" Visibility="{Binding IndicatorData.Visibility}" Background="#FF232323">
                            <Grid Margin="5">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="85*"/>
                                        <RowDefinition Height="5"/>
                                        <RowDefinition Height="40*"/>
                                        <RowDefinition Height="5"/>
                                        <RowDefinition Height="40*"/>
                                    </Grid.RowDefinitions>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="180*"/>
                                            <ColumnDefinition Width="5"/>
                                            <ColumnDefinition Width="180*"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="40*"/>
                                                <RowDefinition Height="5"/>
                                                <RowDefinition Height="40*"/>
                                            </Grid.RowDefinitions>
                                            <Button x:Name="IndicatorTestSCButton" Cursor="Hand" Command="{Binding IndicatorData.ShortCircuitCheckCommand, Mode=OneTime}" Grid.Row="0">
                                                <TextBlock Text="Проверка индикаторов на КЗ" TextWrapping="WrapWithOverflow" TextAlignment="Center"/>
                                            </Button>
                                            <Button x:Name="IndicatorPlateCheckButton" Cursor="Hand" Command="{Binding IndicatorData.ControlActionParameterCommand, Mode=OneTime}" Grid.Row="2">
                                                <TextBlock Text="Проверка передней пластины" TextWrapping="WrapWithOverflow" TextAlignment="Center"/>
                                            </Button>
                                        </Grid>
                                        <Grid Grid.Column="2" Cursor="">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="40*"/>
                                                <RowDefinition Height="5"/>
                                                <RowDefinition Height="40*"/>
                                            </Grid.RowDefinitions>
                                            <Button x:Name="IndicatorTestGSCButton" Cursor="Hand" Command="{Binding IndicatorData.GroundShortCircuitCheckCommand, Mode=OneTime}" Grid.Row="0">
                                                <TextBlock Text="Проверка индикаторов на КЗ по земле" TextWrapping="WrapWithOverflow" TextAlignment="Center"/>
                                            </Button>
                                            <Button x:Name="IndicatoBackPlateCheckButton" Cursor="Hand" Command="{Binding IndicatorData.ControlReturnParameterCommand, Mode=OneTime}" Grid.Row="2">
                                                <TextBlock Text="Проверка задней пластины" TextWrapping="WrapWithOverflow" TextAlignment="Center"/>
                                            </Button>
                                        </Grid>
                                    </Grid>
                                    <Button x:Name="IndicatorLEDButton" Cursor="Hand" Grid.Row="2" Command="{Binding Config.LEDConfigCommand, Mode=OneTime}">
                                        <TextBlock Text="Включение/Выключение световой индикации у индикаторов" TextWrapping="WrapWithOverflow" TextAlignment="Center"/>
                                    </Button>
                                    <Button x:Name="SoftwareReadInfonButton" Cursor="Hand" Grid.Row="4" Command="{Binding IndicatorData.SoftwareVersionParameterCommand, Mode=OneTime}">
                                        <TextBlock Text="Информация о версии ПО в ИКЗ" TextWrapping="WrapWithOverflow" TextAlignment="Center"/>
                                    </Button>
                                </Grid>
                            </Grid>
                        </GroupBox>
                    </Grid>
                </Grid>
                <Grid Grid.Column="2">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="380*"/>
                        <RowDefinition Height="5"/>
                        <RowDefinition Height="250"/>
                    </Grid.RowDefinitions>
                    <Grid>
                        <Grid.Resources>
                            <x:Array x:Key="IndicatorInformation" Type="{x:Type System:String}">
                                <System:String>MAC-Адрес, фаза</System:String>
                                <System:String>Информация о параметре</System:String>
                                <System:String>Статус</System:String>
                            </x:Array>
                            <x:Array x:Key="BaseParameters" Type="{x:Type System:String}">
                                <System:String>MAC-Адрес, фаза</System:String>
                                <System:String>Величина электрического поля (в В/м)</System:String>
                                <System:String>Ток чувствительности (в А)</System:String>
                                <System:String>Интервал отправки телеизмерений №1 (в с)</System:String>
                                <System:String>Интервал отправки телеизмерений №2 (в с)</System:String>
                                <System:String>Стандартный период отправки телеизмерений (в мин)</System:String>
                                <System:String>Порог значения тока отправки телеизмерений (в А)</System:String>
                                <System:String>Величина относительного изменения тока для отправки спорадических телеизмерений (в %)</System:String>
                                <System:String>Величина абсолютного изменения тока для отправки спорадических телеизмеренийа (в А)</System:String>
                            </x:Array>
                            <x:Array x:Key="InterphaseShortCircuitParameters" Type="{x:Type System:String}">
                                <System:String>MAC-Адрес, фаза</System:String>
                                <System:String>Время сброса индикации (в c)</System:String>
                                <System:String>Время сброса индикации после перезапуска линии (в с)</System:String>
                                <System:String>Величина мгновенного изменения тока для срабатывания КЗ (в А)</System:String>
                            </x:Array>
                            <x:Array x:Key="InterphaseGroundShortCircuitParameters" Type="{x:Type System:String}">
                                <System:String>MAC-Адрес, фаза</System:String>
                                <System:String>Относительное значение падения напряжения в линии (в %)</System:String>
                                <System:String>Продолжительность замыкания (в с)</System:String>
                            </x:Array>
                            <x:Array x:Key="IndicatorTelemetry" Type="{x:Type System:String}">
                                <System:String>MAC</System:String>
                                <System:String>Номер группы устройств</System:String>
                                <System:String>Номер линии, заданной на устройстве</System:String>
                                <System:String>Буква фазы</System:String>
                                <System:String>Величина электрического поля</System:String>
                                <System:String>Текущее значение тока в линии</System:String>
                                <System:String>Пиковый ток КЗ</System:String>
                                <!--Значение тока КЗ, превысившее ток уставки-->
                                <System:String>Температура воздуха</System:String>
                                <System:String>Напряжение батареи</System:String>
                                <!--внутренней-->
                                <System:String>Величина падения электрического поля</System:String>
                                <System:String>КЗ краткосрочное?</System:String>
                                <!--КЗ по длительности является краткосрочным?-->
                                <System:String>КЗ постоянное?</System:String>
                                <!--КЗ по длительности является постоянным?-->
                                <System:String>Перегрузка по току</System:String>
                                <System:String>ОЗЗ?</System:String>
                                <!--Состояние земли/Было ли заммыкание на землю?-->
                                <System:String>Низкое напряжение батареи?</System:String>
                                <System:String>Включена механическая индикация (UNUSED)?</System:String>
                                <!--TODO: удостовериться что этоот параметер не нужен-->
                                <System:String>LED?</System:String>
                                <!--Включена светодиодная индикация?-->
                                <System:String>Текущее состояние индикатора</System:String>
                                <System:String>Дополнительная информация</System:String>
                            </x:Array>
                        </Grid.Resources>
                        <!--ScrollViewer/-->
                        <!--DataGrid x:Name="dataGrid" d:ItemsSource="{d:SampleData ItemCount=5}" Margin="0,0,0,97"/-->
                        <GroupBox x:Name="IndicatorParamsGroupBox" Header="Значения в памяти индикатора">
                            <TabControl x:Name="IndicatorParamsTabControl"
                                    SelectedIndex="{Binding IndicatorData.FunctionCallNumStart, Mode=TwoWay}" Margin="1,0,-1,0">
                                <TabItem Header="Служебные функции" Width="130" Height="30">
                                    <Grid>
                                        <DataGrid x:Name="IndicatorInfoDataGrid"
                                              AutoGenerateColumns="False" Background="#FF2F2F2F" Foreground="#FFFF" ItemsSource="{Binding IndicatorData.Indicators, Mode=OneWay}"
                                              RowHeight="45" RowBackground="#FF2F2F2F" AlternatingRowBackground="#FF2F2F2F" GridLinesVisibility="None" BorderBrush="#FF2F2F2F">
                                            <DataGrid.Resources>
                                                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#FF2F2F2F"/>
                                                <Style x:Key="errorStyle" TargetType="{x:Type TextBox}">
                                                    <Setter Property="Padding" Value="-2"/>
                                                    <Style.Triggers>
                                                        <Trigger Property="Validation.HasError" Value="True">
                                                            <Setter Property="Background" Value="Red"/>
                                                            <Setter Property="ToolTip" 
                                                        Value="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={RelativeSource Self}}"/>
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                                <Style TargetType="{x:Type DataGridCell}">
                                                    <Setter Property="HorizontalAlignment" Value="Center" />
                                                    <Setter Property="VerticalAlignment" Value="Center" />
                                                    <Setter Property="BorderThickness" Value="0"/>
                                                    <Style.Triggers>
                                                        <Trigger Property="IsSelected" Value="True">
                                                            <Setter Property="Foreground" Value="White"/>
                                                            <Setter Property="Background" Value="#FF2F2F2F"/>
                                                            <Setter Property="BorderThickness" Value="0"/>
                                                        </Trigger>
                                                        <Trigger Property="IsEditing" Value="True">
                                                            <Setter Property="Foreground" Value="White"/>
                                                            <Setter Property="Background" Value="#FF2F2F2F"/>
                                                            <Setter Property="BorderThickness" Value="0"/>
                                                        </Trigger>
                                                        <Trigger Property="IsFocused" Value="True">
                                                            <Setter Property="Foreground" Value="White"/>
                                                            <Setter Property="Background" Value="#FF2F2F2F"/>
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </DataGrid.Resources>
                                            <DataGrid.Style>
                                                <StaticResource ResourceKey="GreyDataGrid"/>
                                            </DataGrid.Style>
                                            <DataGrid.Columns>
                                                <DataGridTextColumn Header="{Binding [0], Source={StaticResource BaseParameters}}" Binding="{Binding MACAdressShow, StringFormat=d}" Width="105*"/>
                                                <DataGridTextColumn Header="Информация" Binding="{Binding Information, StringFormat=d}" Width="200*"/>
                                                <!--DataGridTextColumn Header="Статус" Binding="{Binding Status, StringFormat=d}" Width="50*"/-->
                                            </DataGrid.Columns>
                                            <DataGrid.ColumnHeaderStyle>
                                                <Style TargetType="{x:Type DataGridColumnHeader}">
                                                    <Setter Property="Background" Value="#FF2F2F2F"/>
                                                    <Setter Property="BorderBrush" Value="DarkSlateGray"/>
                                                    <Setter Property="BorderThickness" Value="1, 2"/>
                                                    <Setter Property="FontWeight" Value="SemiBold"/>
                                                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                    <Setter Property="Padding" Value="5"/>
                                                    <Setter Property="ContentTemplate">
                                                        <Setter.Value>
                                                            <DataTemplate>
                                                                <TextBlock Background="Transparent" TextWrapping="Wrap" Text="{Binding}"/>
                                                            </DataTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </DataGrid.ColumnHeaderStyle>
                                            <DataGrid.RowStyle>
                                                <Style TargetType="{x:Type DataGridRow}">
                                                    <Setter Property="Height" Value="{x:Static System:Double.NaN}"/>
                                                    <Setter Property="TextBlock.Background" Value="#FF2F2F2F"/>
                                                    <!--Setter Property="IsHitTestVisible" Value="False"/-->
                                                </Style>
                                            </DataGrid.RowStyle>
                                            <DataGrid.RowHeaderStyle>
                                                <Style TargetType="{x:Type DataGridRowHeader}">
                                                    <Setter Property="Background" Value="#FF2F2F2F"/>
                                                    <Setter Property="BorderBrush" Value="DarkSlateGray"/>
                                                    <Setter Property="BorderThickness" Value="2, 2"/>
                                                    <Setter Property="FontWeight" Value="SemiBold"/>
                                                    <Setter Property="Padding" Value="5"/>
                                                </Style>
                                            </DataGrid.RowHeaderStyle>
                                        </DataGrid>
                                    </Grid>
                                </TabItem>
                                <TabItem Header="Общие параметры индикатора" Width="215" Height="30">
                                    <Grid>
                                        <!--Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="179*"/>
                                            <ColumnDefinition Width="222*"/>
                                        </Grid.ColumnDefinitions-->
                                        <DataGrid x:Name="IndicatorBaseDataGrid"
                                              AutoGenerateColumns="False" Background="#FF2F2F2F" Foreground="#FFFF" ItemsSource="{Binding IndicatorData.Indicators, Mode=OneWay}"
                                              RowHeight="45" RowBackground="#FF2F2F2F" AlternatingRowBackground="#FF2F2F2F" GridLinesVisibility="None" BorderBrush="#FF2F2F2F" Grid.ColumnSpan="2">
                                            <DataGrid.Resources>
                                                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#FF2F2F2F"/>
                                                <Style x:Key="errorStyle" TargetType="{x:Type TextBox}">
                                                    <Setter Property="Padding" Value="-2"/>
                                                    <Style.Triggers>
                                                        <Trigger Property="Validation.HasError" Value="True">
                                                            <Setter Property="Background" Value="Red"/>
                                                            <Setter Property="ToolTip" 
                                                        Value="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={RelativeSource Self}}"/>
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                                <Style TargetType="{x:Type DataGridCell}">
                                                    <Setter Property="HorizontalAlignment" Value="Center" />
                                                    <Setter Property="VerticalAlignment" Value="Center" />
                                                    <Setter Property="BorderThickness" Value="0"/>
                                                    <Style.Triggers>
                                                        <Trigger Property="IsSelected" Value="True">
                                                            <Setter Property="Foreground" Value="White"/>
                                                            <Setter Property="Background" Value="#FF2F2F2F"/>
                                                            <Setter Property="BorderThickness" Value="0"/>
                                                        </Trigger>
                                                        <Trigger Property="IsEditing" Value="True">
                                                            <Setter Property="Foreground" Value="White"/>
                                                            <Setter Property="Background" Value="#FF2F2F2F"/>
                                                            <Setter Property="BorderThickness" Value="0"/>
                                                        </Trigger>
                                                        <Trigger Property="IsFocused" Value="True">
                                                            <Setter Property="Foreground" Value="White"/>
                                                            <Setter Property="Background" Value="#FF2F2F2F"/>
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </DataGrid.Resources>
                                            <DataGrid.Style>
                                                <StaticResource ResourceKey="GreyDataGrid"/>
                                            </DataGrid.Style>
                                            <DataGrid.Columns>
                                                <DataGridTextColumn Binding="{Binding MACAdressShow, StringFormat=d}" Width="85*">
                                                    <DataGridTextColumn.HeaderTemplate>
                                                        <DataTemplate>
                                                            <TextBlock TextWrapping="Wrap" Text="{Binding [0], Source={StaticResource BaseParameters}}" ToolTip="Идентификатор устройства ИКЗ"/>
                                                        </DataTemplate>
                                                    </DataGridTextColumn.HeaderTemplate>
                                                </DataGridTextColumn>
                                                <DataGridTextColumn Binding="{Binding FieldThreshold, StringFormat=d}" Width="85*">
                                                    <DataGridTextColumn.HeaderTemplate>
                                                        <DataTemplate>
                                                            <TextBlock TextWrapping="Wrap" Text="{Binding [1], Source={StaticResource BaseParameters}}" ToolTip="Величина напряженности электрического поля. Благодаря этому параметру определяется есть ли напряжение на линии, не реккомендуется менять"/>
                                                        </DataTemplate>
                                                    </DataGridTextColumn.HeaderTemplate>
                                                </DataGridTextColumn>
                                                <DataGridTextColumn Binding="{Binding CurrentThreshold, StringFormat=d}" Width="85*">
                                                    <DataGridTextColumn.HeaderTemplate>
                                                        <DataTemplate>
                                                            <TextBlock TextWrapping="Wrap" Text="{Binding [2], Source={StaticResource BaseParameters}}" ToolTip="Величина предела тока, после превышения которого телеизмерения передаются с интервалом T2, не реккомендуется менять"/>
                                                        </DataTemplate>
                                                    </DataGridTextColumn.HeaderTemplate>
                                                </DataGridTextColumn>
                                                <DataGridTextColumn Binding="{Binding UploadT1, StringFormat=d}" Width="90*">
                                                    <DataGridTextColumn.HeaderTemplate>
                                                        <DataTemplate>
                                                            <TextBlock TextWrapping="Wrap" Text="{Binding [3], Source={StaticResource BaseParameters}}" ToolTip="Время периода отправки телеизмерений, если значение тока превысило значение порога тока для отправки телеизмерений"/>
                                                        </DataTemplate>
                                                    </DataGridTextColumn.HeaderTemplate>
                                                </DataGridTextColumn>
                                                <DataGridTextColumn Binding="{Binding UploadT2, StringFormat=d}" Width="90*">
                                                    <DataGridTextColumn.HeaderTemplate>
                                                        <DataTemplate>
                                                            <TextBlock TextWrapping="Wrap" Text="{Binding [4], Source={StaticResource BaseParameters}}" ToolTip="Время периода отправки телеизмерений, если значение тока превысило значение тока чувствительности"/>
                                                        </DataTemplate>
                                                    </DataGridTextColumn.HeaderTemplate>
                                                </DataGridTextColumn>
                                                <DataGridTextColumn Binding="{Binding HeartBeat, StringFormat=d}" Width="90*">
                                                    <DataGridTextColumn.HeaderTemplate>
                                                        <DataTemplate>
                                                            <TextBlock TextWrapping="Wrap" Text="{Binding [5], Source={StaticResource BaseParameters}}" ToolTip="Время, после которого будут отправлены телеизмерения, если на линии нет тока"/>
                                                        </DataTemplate>
                                                    </DataGridTextColumn.HeaderTemplate>
                                                </DataGridTextColumn>
                                                <DataGridTextColumn Binding="{Binding CurrentIValue, StringFormat=d}" Width="100*">
                                                    <DataGridTextColumn.HeaderTemplate>
                                                        <DataTemplate>
                                                            <TextBlock TextWrapping="Wrap" Text="{Binding [6], Source={StaticResource BaseParameters}}" ToolTip="Предел тока, после преодоления которого время отправки телеизмерений равно интервалу №2"/>
                                                        </DataTemplate>
                                                    </DataGridTextColumn.HeaderTemplate>
                                                </DataGridTextColumn>
                                                <DataGridTextColumn Binding="{Binding CurrentAbsoluteValue, StringFormat=d}" Width="110*">
                                                    <DataGridTextColumn.HeaderTemplate>
                                                        <DataTemplate>
                                                            <TextBlock TextWrapping="Wrap" Text="{Binding [7], Source={StaticResource BaseParameters}}" ToolTip="Если в в опредёлнный момент величина тока изменяется больше чем на относительное и абсолютное значение, индикаторы отправят телеизмерения обратно на рабочую станцию. Не реккомендуется менять"/>
                                                        </DataTemplate>
                                                    </DataGridTextColumn.HeaderTemplate>
                                                </DataGridTextColumn>
                                                <DataGridTextColumn Binding="{Binding CurrentRelativeValue, StringFormat=d}" Width="110*">
                                                    <DataGridTextColumn.HeaderTemplate>
                                                        <DataTemplate>
                                                            <TextBlock TextWrapping="Wrap" Text="{Binding [8], Source={StaticResource BaseParameters}}" ToolTip="Если в в опредёлнный момент величина тока изменяется больше чем на относительное и абсолютное значение, индикаторы отправят телеизмерения обратно на рабочую станцию. Не реккомендуется менять"/>
                                                        </DataTemplate>
                                                    </DataGridTextColumn.HeaderTemplate>
                                                </DataGridTextColumn>
                                            </DataGrid.Columns>
                                            <DataGrid.ColumnHeaderStyle>
                                                <Style TargetType="{x:Type DataGridColumnHeader}">
                                                    <Setter Property="Background" Value="#FF2F2F2F"/>
                                                    <Setter Property="BorderBrush" Value="DarkSlateGray"/>
                                                    <Setter Property="BorderThickness" Value="1, 2"/>
                                                    <Setter Property="FontWeight" Value="SemiBold"/>
                                                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                    <Setter Property="Padding" Value="5"/>
                                                    <Setter Property="ContentTemplate">
                                                        <Setter.Value>
                                                            <DataTemplate>
                                                                <TextBlock Background="Transparent" TextWrapping="Wrap" Text="{Binding}"/>
                                                            </DataTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </DataGrid.ColumnHeaderStyle>
                                            <DataGrid.RowStyle>
                                                <Style TargetType="{x:Type DataGridRow}">
                                                    <Setter Property="Height" Value="{x:Static System:Double.NaN}"/>
                                                    <Setter Property="TextBlock.Background" Value="#FF2F2F2F"/>
                                                    <!--Setter Property="IsHitTestVisible" Value="False"/-->
                                                </Style>
                                            </DataGrid.RowStyle>
                                            <DataGrid.RowHeaderStyle>
                                                <Style TargetType="{x:Type DataGridRowHeader}">
                                                    <Setter Property="Background" Value="#FF2F2F2F"/>
                                                    <Setter Property="BorderBrush" Value="DarkSlateGray"/>
                                                    <Setter Property="BorderThickness" Value="2, 1"/>
                                                    <Setter Property="FontWeight" Value="SemiBold"/>
                                                    <Setter Property="Padding" Value="5"/>
                                                </Style>
                                            </DataGrid.RowHeaderStyle>
                                        </DataGrid>
                                    </Grid>
                                </TabItem>
                                <TabItem Header="Параметры КЗ" Width="150" Height="30">
                                    <Grid Background="#FF2F2F2F">
                                        <!--Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="169*"/>
                                            <ColumnDefinition Width="232*"/>
                                        </Grid.ColumnDefinitions-->
                                        <DataGrid x:Name="IndicatorSCDataGrid"
                                              AutoGenerateColumns="False" Background="#FF2F2F2F" Foreground="#FFFF" ItemsSource="{Binding IndicatorData.Indicators, Mode=OneWay}"
                                              RowHeight="45" RowBackground="#FF2F2F2F" AlternatingRowBackground="#FF2F2F2F" GridLinesVisibility="None" BorderBrush="#FF2F2F2F" Grid.ColumnSpan="2">
                                            <DataGrid.Resources>
                                                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#FF2F2F2F"/>
                                                <Style x:Key="errorStyle" TargetType="{x:Type TextBox}">
                                                    <Setter Property="Padding" Value="-2"/>
                                                    <Style.Triggers>
                                                        <Trigger Property="Validation.HasError" Value="True">
                                                            <Setter Property="Background" Value="Red"/>
                                                            <Setter Property="ToolTip" 
                                                        Value="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={RelativeSource Self}}"/>
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                                <Style TargetType="{x:Type DataGridCell}">
                                                    <Setter Property="HorizontalAlignment" Value="Center" />
                                                    <Setter Property="VerticalAlignment" Value="Center" />
                                                    <Setter Property="BorderThickness" Value="0"/>
                                                    <Style.Triggers>
                                                        <Trigger Property="IsSelected" Value="True">
                                                            <Setter Property="Foreground" Value="White"/>
                                                            <Setter Property="Background" Value="#FF2F2F2F"/>
                                                            <Setter Property="BorderThickness" Value="0"/>
                                                        </Trigger>
                                                        <Trigger Property="IsEditing" Value="True">
                                                            <Setter Property="Foreground" Value="White"/>
                                                            <Setter Property="Background" Value="#FF2F2F2F"/>
                                                            <Setter Property="BorderThickness" Value="0"/>
                                                        </Trigger>
                                                        <Trigger Property="IsFocused" Value="True">
                                                            <Setter Property="Foreground" Value="White"/>
                                                            <Setter Property="Background" Value="#FF2F2F2F"/>
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </DataGrid.Resources>
                                            <DataGrid.Style>
                                                <StaticResource ResourceKey="GreyDataGrid"/>
                                            </DataGrid.Style>
                                            <DataGrid.Columns>
                                                <!--DataGridTextColumn Header="{Binding [0], Source={StaticResource InterphaseShortCircuitParameters}}" Binding="{Binding MACAdressShow, StringFormat=d}" Width="160"/-->
                                                <DataGridTextColumn Binding="{Binding MACAdressShow, StringFormat=d}" Width="85*">
                                                    <DataGridTextColumn.HeaderTemplate>
                                                        <DataTemplate>
                                                            <TextBlock TextWrapping="Wrap" Text="{Binding [0], Source={StaticResource InterphaseShortCircuitParameters}}" ToolTip="Идентификатор устройства ИКЗ"/>
                                                        </DataTemplate>
                                                    </DataGridTextColumn.HeaderTemplate>
                                                </DataGridTextColumn>
                                                <DataGridTextColumn Binding="{Binding TimeDelay, StringFormat=d}" Width="205*">
                                                    <DataGridTextColumn.HeaderTemplate>
                                                        <DataTemplate>
                                                            <TextBlock TextWrapping="Wrap" Text="{Binding [1], Source={StaticResource InterphaseShortCircuitParameters}}" ToolTip="Время, после которого у ИКЗ сбросится индикация, сигнализируящая о КЗ на линии"/>
                                                        </DataTemplate>
                                                    </DataGridTextColumn.HeaderTemplate>
                                                </DataGridTextColumn>
                                                <DataGridTextColumn Binding="{Binding RepowerDelay, StringFormat=d}" Width="205*">
                                                    <DataGridTextColumn.HeaderTemplate>
                                                        <DataTemplate>
                                                            <TextBlock TextWrapping="Wrap" Text="{Binding [2], Source={StaticResource InterphaseShortCircuitParameters}}" ToolTip="Время, после которого у ИКЗ сбросится индикация, если линия была перезапущена. Предпологается что время перезапуска будет равно 30 секундам (стандартное значение)"/>
                                                        </DataTemplate>
                                                    </DataGridTextColumn.HeaderTemplate>
                                                </DataGridTextColumn>
                                                <DataGridTextColumn Binding="{Binding ShortCurrent, StringFormat=d}" Width="205*">
                                                    <DataGridTextColumn.HeaderTemplate>
                                                        <DataTemplate>
                                                            <TextBlock TextWrapping="Wrap" Text="{Binding [3], Source={StaticResource InterphaseShortCircuitParameters}}" ToolTip="Если величина тока увеличися мгновенно на данное значение, ИКЗ это расценит как короткое замыкание и включится индикация"/>
                                                        </DataTemplate>
                                                    </DataGridTextColumn.HeaderTemplate>
                                                </DataGridTextColumn>
                                            </DataGrid.Columns>
                                            <DataGrid.ColumnHeaderStyle>
                                                <Style TargetType="{x:Type DataGridColumnHeader}">
                                                    <Setter Property="Background" Value="#FF2F2F2F"/>
                                                    <Setter Property="BorderBrush" Value="DarkSlateGray"/>
                                                    <Setter Property="BorderThickness" Value="1, 2"/>
                                                    <Setter Property="FontWeight" Value="SemiBold"/>
                                                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                    <Setter Property="Padding" Value="5"/>
                                                    <Setter Property="ContentTemplate">
                                                        <Setter.Value>
                                                            <DataTemplate>
                                                                <TextBlock Background="Transparent" TextWrapping="Wrap" Text="{Binding}"/>
                                                            </DataTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </DataGrid.ColumnHeaderStyle>
                                            <DataGrid.RowStyle>
                                                <Style TargetType="{x:Type DataGridRow}">
                                                    <Setter Property="Height" Value="{x:Static System:Double.NaN}"/>
                                                </Style>
                                            </DataGrid.RowStyle>
                                            <DataGrid.RowHeaderStyle>
                                                <Style TargetType="{x:Type DataGridRowHeader}">
                                                    <Setter Property="Background" Value="#FF2F2F2F"/>
                                                    <Setter Property="BorderBrush" Value="DarkSlateGray"/>
                                                    <Setter Property="BorderThickness" Value="2, 1"/>
                                                    <Setter Property="FontWeight" Value="SemiBold"/>
                                                    <Setter Property="Padding" Value="5"/>
                                                </Style>
                                            </DataGrid.RowHeaderStyle>
                                        </DataGrid>
                                    </Grid>
                                </TabItem>
                                <TabItem Header="Параметры ОЗЗ" Width="150" Height="30">
                                    <Grid Background="#FF2F2F2F">
                                        <DataGrid x:Name="IndicatorGSCDataGrid" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                              AutoGenerateColumns="False" Background="#FF2F2F2F" Foreground="#FFFF" ItemsSource="{Binding IndicatorData.Indicators, Mode=OneWay}"
                                              RowHeight="45" RowBackground="#FF2F2F2F" AlternatingRowBackground="#FF2F2F2F" GridLinesVisibility="None" BorderBrush="#FF2F2F2F">
                                            <DataGrid.Resources>
                                                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#FF2F2F2F"/>
                                                <Style x:Key="errorStyle" TargetType="{x:Type TextBox}">
                                                    <Setter Property="Padding" Value="-2"/>
                                                    <Style.Triggers>
                                                        <Trigger Property="Validation.HasError" Value="True">
                                                            <Setter Property="Background" Value="Red"/>
                                                            <Setter Property="ToolTip" 
                                                        Value="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={RelativeSource Self}}"/>
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                                <Style TargetType="{x:Type DataGridCell}">
                                                    <Setter Property="HorizontalAlignment" Value="Center" />
                                                    <Setter Property="VerticalAlignment" Value="Center" />
                                                    <Setter Property="BorderThickness" Value="0"/>
                                                    <Style.Triggers>
                                                        <Trigger Property="IsSelected" Value="True">
                                                            <Setter Property="Foreground" Value="White"/>
                                                            <Setter Property="Background" Value="#FF2F2F2F"/>
                                                            <Setter Property="BorderThickness" Value="0"/>
                                                        </Trigger>
                                                        <Trigger Property="IsEditing" Value="True">
                                                            <Setter Property="Foreground" Value="White"/>
                                                            <Setter Property="Background" Value="#FF2F2F2F"/>
                                                            <Setter Property="BorderThickness" Value="0"/>
                                                        </Trigger>
                                                        <Trigger Property="IsFocused" Value="True">
                                                            <Setter Property="Foreground" Value="White"/>
                                                            <Setter Property="Background" Value="#FF2F2F2F"/>
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </DataGrid.Resources>
                                            <DataGrid.Style>
                                                <StaticResource ResourceKey="GreyDataGrid"/>
                                            </DataGrid.Style>
                                            <DataGrid.Columns>
                                                <DataGridTextColumn Binding="{Binding MACAdressShow, StringFormat=d}" Width="255*">
                                                    <DataGridTextColumn.HeaderTemplate>
                                                        <DataTemplate>
                                                            <TextBlock TextWrapping="Wrap" Text="{Binding [0], Source={StaticResource InterphaseGroundShortCircuitParameters}}" ToolTip="Идентификатор устройства ИКЗ"/>
                                                        </DataTemplate>
                                                    </DataGridTextColumn.HeaderTemplate>
                                                </DataGridTextColumn>
                                                <DataGridTextColumn Binding="{Binding TransientFieldDrop, StringFormat=d}" Width="255*">
                                                    <DataGridTextColumn.HeaderTemplate>
                                                        <DataTemplate>
                                                            <TextBlock TextWrapping="Wrap" Text="{Binding [1], Source={StaticResource InterphaseGroundShortCircuitParameters}}" ToolTip="Значение падения напряжения, после которого и с соблюдением условия по времени ИКЗ будет считать что произошло однофазное замыкание на землю"/>
                                                        </DataTemplate>
                                                    </DataGridTextColumn.HeaderTemplate>
                                                </DataGridTextColumn>
                                                <DataGridTextColumn Binding="{Binding FieldDropDelay, StringFormat=d}" Width="255*">
                                                    <DataGridTextColumn.HeaderTemplate>
                                                        <DataTemplate>
                                                            <TextBlock TextWrapping="Wrap" Text="{Binding [2], Source={StaticResource InterphaseGroundShortCircuitParameters}}" ToolTip="Если в течении этого периода ток не возвращается к исходному значению и уже происходил бросок напряжения, ИКЗ это расценит как ОЗЗ"/>
                                                        </DataTemplate>
                                                    </DataGridTextColumn.HeaderTemplate>
                                                </DataGridTextColumn>
                                            </DataGrid.Columns>
                                            <DataGrid.ColumnHeaderStyle>
                                                <Style TargetType="{x:Type DataGridColumnHeader}">
                                                    <Setter Property="Background" Value="#FF2F2F2F"/>
                                                    <Setter Property="BorderBrush" Value="DarkSlateGray"/>
                                                    <Setter Property="BorderThickness" Value="1, 2"/>
                                                    <Setter Property="FontWeight" Value="SemiBold"/>
                                                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                    <Setter Property="Padding" Value="5"/>
                                                    <Setter Property="ContentTemplate">
                                                        <Setter.Value>
                                                            <DataTemplate>
                                                                <TextBlock Background="Transparent" TextWrapping="Wrap" Text="{Binding}"/>
                                                            </DataTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </DataGrid.ColumnHeaderStyle>
                                            <DataGrid.RowStyle>
                                                <Style TargetType="{x:Type DataGridRow}">
                                                    <Setter Property="Height" Value="{x:Static System:Double.NaN}"/>
                                                </Style>
                                            </DataGrid.RowStyle>
                                            <DataGrid.RowHeaderStyle>
                                                <Style TargetType="{x:Type DataGridRowHeader}">
                                                    <Setter Property="Background" Value="#FF2F2F2F"/>
                                                    <Setter Property="BorderBrush" Value="DarkSlateGray"/>
                                                    <Setter Property="BorderThickness" Value="2, 1"/>
                                                    <Setter Property="FontWeight" Value="SemiBold"/>
                                                    <Setter Property="Padding" Value="5"/>
                                                </Style>
                                            </DataGrid.RowHeaderStyle>
                                        </DataGrid>
                                    </Grid>
                                </TabItem>
                                <TabItem Header="Телеизмерения" Width="150">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="50*"/>
                                            <RowDefinition Height="500*"/>
                                        </Grid.RowDefinitions>
                                        <Grid Background="#FF2F2F2F">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="250*"/>
                                                <ColumnDefinition Width="250*"/>
                                                <!--ColumnDefinition Width="200*"/-->
                                            </Grid.ColumnDefinitions>
                                            <Button x:Name="ReadTelemetryButton" Grid.Column="0"
                                                    Command="{Binding IndicatorData.ReadTelemetryCommand}"
                                                    Content="Чтение данных" Margin="200,3,20,3" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Cursor="Hand"
                                            />
                                            <CheckBox x:Name="LogTelemetryCheckBox"
                                                Margin="0,0,200,3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                                IsChecked="{Binding Messages.InLog, UpdateSourceTrigger=PropertyChanged}"
                                                Content="Запись данных в файл" Cursor="" Grid.Column="1"/>
                                        </Grid>
                                        <DataGrid x:Name="IndidcatorTelemetryDataGrid" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                              AutoGenerateColumns="False" Background="#FF2F2F2F" Foreground="#FFFF" ItemsSource="{Binding IndicatorData.Indicators, Mode=OneWay}"
                                              RowHeight="45" RowBackground="#FF2F2F2F" AlternatingRowBackground="#FF2F2F2F" GridLinesVisibility="None" BorderBrush="#FF2F2F2F" Grid.Row="1">
                                            <DataGrid.Resources>
                                                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#FF2F2F2F"/>
                                                <Style x:Key="errorStyle" TargetType="{x:Type TextBox}">
                                                    <Setter Property="Padding" Value="-2"/>
                                                    <Style.Triggers>
                                                        <Trigger Property="Validation.HasError" Value="True">
                                                            <Setter Property="Background" Value="Red"/>
                                                            <Setter Property="ToolTip" 
                                                        Value="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={RelativeSource Self}}"/>
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                                <Style TargetType="{x:Type DataGridCell}">
                                                    <Setter Property="HorizontalAlignment" Value="Center" />
                                                    <Setter Property="VerticalAlignment" Value="Center" />
                                                    <Setter Property="BorderThickness" Value="0"/>
                                                    <Style.Triggers>
                                                        <Trigger Property="IsSelected" Value="True">
                                                            <Setter Property="Foreground" Value="White"/>
                                                            <Setter Property="Background" Value="#FF2F2F2F"/>
                                                            <Setter Property="BorderThickness" Value="0"/>
                                                        </Trigger>
                                                        <Trigger Property="IsEditing" Value="True">
                                                            <Setter Property="Foreground" Value="White"/>
                                                            <Setter Property="Background" Value="#FF2F2F2F"/>
                                                            <Setter Property="BorderThickness" Value="0"/>
                                                        </Trigger>
                                                        <Trigger Property="IsFocused" Value="True">
                                                            <Setter Property="Foreground" Value="White"/>
                                                            <Setter Property="Background" Value="#FF2F2F2F"/>
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </DataGrid.Resources>
                                            <DataGrid.Style>
                                                <StaticResource ResourceKey="GreyDataGrid"/>
                                            </DataGrid.Style>
                                            <DataGrid.Columns>
                                                <DataGridTextColumn Binding="{Binding MACAdressShow, StringFormat=d}" Width="255*">
                                                    <DataGridTextColumn.HeaderTemplate>
                                                        <DataTemplate>
                                                            <TextBlock TextWrapping="Wrap" Text="{Binding [0], Source={StaticResource IndicatorTelemetry}}" ToolTip="Идентификатор устройства ИКЗ"/>
                                                        </DataTemplate>
                                                    </DataGridTextColumn.HeaderTemplate>
                                                </DataGridTextColumn>
                                                <!--DataGridTextColumn Binding="{Binding TGroupAddr, StringFormat=d}" Width="255*">
                                                    <DataGridTextColumn.HeaderTemplate>
                                                        <DataTemplate>
                                                            <TextBlock TextWrapping="Wrap" Text="{Binding [1], Source={StaticResource IndicatorTelemetry}}" ToolTip="Идентификатор устройства ИКЗ"/>
                                                        </DataTemplate>
                                                    </DataGridTextColumn.HeaderTemplate>
                                                </DataGridTextColumn>
                                                <DataGridTextColumn Binding="{Binding TRoute, StringFormat=d}" Width="255*">
                                                    <DataGridTextColumn.HeaderTemplate>
                                                        <DataTemplate>
                                                            <TextBlock TextWrapping="Wrap" Text="{Binding [2], Source={StaticResource IndicatorTelemetry}}" ToolTip="Идентификатор устройства ИКЗ"/>
                                                        </DataTemplate>
                                                    </DataGridTextColumn.HeaderTemplate>
                                                </DataGridTextColumn-->
                                                <DataGridTextColumn Binding="{Binding TPhase, StringFormat=d}" Width="150*">
                                                    <DataGridTextColumn.HeaderTemplate>
                                                        <DataTemplate>
                                                            <TextBlock TextWrapping="Wrap" Text="{Binding [3], Source={StaticResource IndicatorTelemetry}}" ToolTip="Идентификатор устройства ИКЗ, буква фазы на самом индикаторе"/>
                                                        </DataTemplate>
                                                    </DataGridTextColumn.HeaderTemplate>
                                                </DataGridTextColumn>
                                                <DataGridTextColumn Binding="{Binding TElectricalFieldValue, StringFormat=f}" Width="255*">
                                                    <DataGridTextColumn.HeaderTemplate>
                                                        <DataTemplate>
                                                            <TextBlock TextWrapping="Wrap" Text="{Binding [4], Source={StaticResource IndicatorTelemetry}}" ToolTip="Велиина показывающая напряжённость электриеского поля, в В/м"/>
                                                        </DataTemplate>
                                                    </DataGridTextColumn.HeaderTemplate>
                                                </DataGridTextColumn>
                                                <DataGridTextColumn Binding="{Binding TCurrentValue, StringFormat=f}" Width="195*">
                                                    <DataGridTextColumn.HeaderTemplate>
                                                        <DataTemplate>
                                                            <TextBlock TextWrapping="Wrap" Text="{Binding [5], Source={StaticResource IndicatorTelemetry}}" ToolTip="Значение тока в линии, в А"/>
                                                        </DataTemplate>
                                                    </DataGridTextColumn.HeaderTemplate>
                                                </DataGridTextColumn>
                                                <DataGridTextColumn Binding="{Binding TCurrentSettingOverflowValue, StringFormat=f}" Width="210*">
                                                    <DataGridTextColumn.HeaderTemplate>
                                                        <DataTemplate>
                                                            <TextBlock TextWrapping="Wrap" Text="{Binding [6], Source={StaticResource IndicatorTelemetry}}" ToolTip="Величина тока перегрузки, ???"/>
                                                        </DataTemplate>
                                                    </DataGridTextColumn.HeaderTemplate>
                                                </DataGridTextColumn>
                                                <!--DataGridTextColumn Binding="{Binding TTemprature, StringFormat=d}" Width="255*">
                                                    <DataGridTextColumn.HeaderTemplate>
                                                        <DataTemplate>
                                                            <TextBlock TextWrapping="Wrap" Text="{Binding [7], Source={StaticResource IndicatorTelemetry}}" ToolTip="Идентификатор устройства ИКЗ"/>
                                                        </DataTemplate>
                                                    </DataGridTextColumn.HeaderTemplate>
                                                </DataGridTextColumn>
                                                <DataGridTextColumn Binding="{Binding TBatteryVoltage, StringFormat=d}" Width="255*">
                                                    <DataGridTextColumn.HeaderTemplate>
                                                        <DataTemplate>
                                                            <TextBlock TextWrapping="Wrap" Text="{Binding [8], Source={StaticResource IndicatorTelemetry}}" ToolTip="Идентификатор устройства ИКЗ"/>
                                                        </DataTemplate>
                                                    </DataGridTextColumn.HeaderTemplate>
                                                </DataGridTextColumn-->
                                                <DataGridTextColumn Binding="{Binding TElectricalFieldDropdownValue, StringFormat=d}" Width="255*">
                                                    <DataGridTextColumn.HeaderTemplate>
                                                        <DataTemplate>
                                                            <TextBlock TextWrapping="Wrap" Text="{Binding [9], Source={StaticResource IndicatorTelemetry}}" ToolTip="Величина падения электрического поля, в В/м ???"/>
                                                        </DataTemplate>
                                                    </DataGridTextColumn.HeaderTemplate>
                                                </DataGridTextColumn>
                                                <DataGridTextColumn Binding="{Binding TQuickShortCircuit, StringFormat=d}" Width="255*">
                                                    <DataGridTextColumn.HeaderTemplate>
                                                        <DataTemplate>
                                                            <TextBlock TextWrapping="Wrap" Text="{Binding [10], Source={StaticResource IndicatorTelemetry}}" ToolTip="Число отображает определил ли индикатор КЗ как краткосрочное (произошедшее мгновенно/в короткий промежуток времени). 1 - Да, 2 - Нет"/>
                                                        </DataTemplate>
                                                    </DataGridTextColumn.HeaderTemplate>
                                                </DataGridTextColumn>
                                                <DataGridTextColumn Binding="{Binding TPermanentShortCircuit, StringFormat=d}" Width="255*">
                                                    <DataGridTextColumn.HeaderTemplate>
                                                        <DataTemplate>
                                                            <TextBlock TextWrapping="Wrap" Text="{Binding [11], Source={StaticResource IndicatorTelemetry}}" ToolTip="Число отображает определил ли индикатор КЗ как постоянное (сохранется на линии преодолев определённый временной лимит). 1 - Да, 2 - Нет"/>
                                                        </DataTemplate>
                                                    </DataGridTextColumn.HeaderTemplate>
                                                </DataGridTextColumn>
                                                <!--DataGridTextColumn Binding="{Binding TGroupAddr, StringFormat=d}" Width="255*">
                                                    <DataGridTextColumn.HeaderTemplate>
                                                        <DataTemplate>
                                                            <TextBlock TextWrapping="Wrap" Text="{Binding [12], Source={StaticResource IndicatorTelemetry}}" ToolTip="Идентификатор устройства ИКЗ"/>
                                                        </DataTemplate>
                                                    </DataGridTextColumn.HeaderTemplate>
                                                </DataGridTextColumn-->
                                                <DataGridTextColumn Binding="{Binding TGroundShortCircuit, StringFormat=d}" Width="150*">
                                                    <DataGridTextColumn.HeaderTemplate>
                                                        <DataTemplate>
                                                            <TextBlock TextWrapping="Wrap" Text="{Binding [13], Source={StaticResource IndicatorTelemetry}}" ToolTip="Число отображает определил ли индикатор КЗ как замыкание на землю. 1 - Да, 2 - Нет"/>
                                                        </DataTemplate>
                                                    </DataGridTextColumn.HeaderTemplate>
                                                </DataGridTextColumn>
                                                <DataGridTextColumn Binding="{Binding TLowBatteryValue, StringFormat=d}" Width="255*">
                                                    <DataGridTextColumn.HeaderTemplate>
                                                        <DataTemplate>
                                                            <TextBlock TextWrapping="Wrap" Text="{Binding [14], Source={StaticResource IndicatorTelemetry}}" ToolTip="Сигнал о маленьком зарде внутренней батареи в ИКЗ. 1 - Малый заряд, 2 - Всё в пордке"/>
                                                        </DataTemplate>
                                                    </DataGridTextColumn.HeaderTemplate>
                                                </DataGridTextColumn>
                                                <!--DataGridTextColumn Binding="{Binding TGroupAddr, StringFormat=d}" Width="255*">
                                                    <DataGridTextColumn.HeaderTemplate>
                                                        <DataTemplate>
                                                            <TextBlock TextWrapping="Wrap" Text="{Binding [15], Source={StaticResource IndicatorTelemetry}}" ToolTip="Идентификатор устройства ИКЗ"/>
                                                        </DataTemplate>
                                                    </DataGridTextColumn.HeaderTemplate>
                                                </DataGridTextColumn-->
                                                <DataGridTextColumn Binding="{Binding TLEDIndicationStatus, StringFormat=d}" Width="125*">
                                                    <DataGridTextColumn.HeaderTemplate>
                                                        <DataTemplate>
                                                            <TextBlock TextWrapping="Wrap" Text="{Binding [16], Source={StaticResource IndicatorTelemetry}}" ToolTip="Сигнал о том, работает ли в данный момент световая индикация? 1 - Да, 2 - Нет"/>
                                                        </DataTemplate>
                                                    </DataGridTextColumn.HeaderTemplate>
                                                </DataGridTextColumn>
                                                <!--DataGridTextColumn Binding="{Binding TGroupAddr, StringFormat=d}" Width="255*">
                                                    <DataGridTextColumn.HeaderTemplate>
                                                        <DataTemplate>
                                                            <TextBlock TextWrapping="Wrap" Text="{Binding [17], Source={StaticResource IndicatorTelemetry}}" ToolTip="Идентификатор устройства ИКЗ"/>
                                                        </DataTemplate>
                                                    </DataGridTextColumn.HeaderTemplate>
                                                </DataGridTextColumn>
                                                <DataGridTextColumn Binding="{Binding TGroupAddr, StringFormat=d}" Width="255*">
                                                    <DataGridTextColumn.HeaderTemplate>
                                                        <DataTemplate>
                                                            <TextBlock TextWrapping="Wrap" Text="{Binding [18], Source={StaticResource IndicatorTelemetry}}" ToolTip="Идентификатор устройства ИКЗ"/>
                                                        </DataTemplate>
                                                    </DataGridTextColumn.HeaderTemplate>
                                                </DataGridTextColumn-->
                                            </DataGrid.Columns>
                                            <DataGrid.ColumnHeaderStyle>
                                                <Style TargetType="{x:Type DataGridColumnHeader}">
                                                    <Setter Property="Background" Value="#FF2F2F2F"/>
                                                    <Setter Property="BorderBrush" Value="DarkSlateGray"/>
                                                    <Setter Property="BorderThickness" Value="1, 2"/>
                                                    <Setter Property="FontWeight" Value="SemiBold"/>
                                                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                    <Setter Property="Padding" Value="5"/>
                                                    <Setter Property="ContentTemplate">
                                                        <Setter.Value>
                                                            <DataTemplate>
                                                                <TextBlock Background="Transparent" TextWrapping="Wrap" Text="{Binding}"/>
                                                            </DataTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </DataGrid.ColumnHeaderStyle>
                                            <DataGrid.RowStyle>
                                                <Style TargetType="{x:Type DataGridRow}">
                                                    <Setter Property="Height" Value="{x:Static System:Double.NaN}"/>
                                                </Style>
                                            </DataGrid.RowStyle>
                                            <DataGrid.RowHeaderStyle>
                                                <Style TargetType="{x:Type DataGridRowHeader}">
                                                    <Setter Property="Background" Value="#FF2F2F2F"/>
                                                    <Setter Property="BorderBrush" Value="DarkSlateGray"/>
                                                    <Setter Property="BorderThickness" Value="2, 1"/>
                                                    <Setter Property="FontWeight" Value="SemiBold"/>
                                                    <Setter Property="Padding" Value="5"/>
                                                </Style>
                                            </DataGrid.RowHeaderStyle>
                                        </DataGrid>
                                    </Grid>
                                </TabItem>
                            </TabControl>
                        </GroupBox>
                        <Button Height="20" Margin="5" Width="120" VerticalAlignment="Top" HorizontalAlignment="Right" Content="Очистить таблицу"
                                Command="{Binding IndicatorData.ClearDataGridContentCommand}"/>
                    </Grid>
                    <Grid Grid.Row="2">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="275*"/>
                            <RowDefinition Height="110*"/>
                        </Grid.RowDefinitions>
                        <GroupBox Header="Сообщения">
                            <Grid>
                                <TextBox
                                    x:Name="consoleBox"
                                    TextWrapping="Wrap" 
                                    VerticalScrollBarVisibility="Auto" 
                                    HorizontalScrollBarVisibility="Visible"
                                    AcceptsReturn="False"
                                    AcceptsTab="False"
                                    Text="{Binding Messages.MessagesText, UpdateSourceTrigger=PropertyChanged}"
                                    FontSize="12"
                                    IsReadOnly="true"
                                    attached:HorizontalScrolling.UseHorizontalScrollingValue="True"
                                    Margin="0,0,0,0"/>
                            </Grid>
                        </GroupBox>
                        <Grid Grid.Row="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="150*"/>
                                <ColumnDefinition Width="450*"/>
                                <ColumnDefinition Width="120*"/>
                            </Grid.ColumnDefinitions>
                            <Button x:Name="SendButton" Grid.Column="0" Margin="0,10,10,10" Command="{Binding Messages.SendMessageCommand, Mode=OneTime}"
                         Content="Отправить" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                            <TextBox x:Name="COMInputTextBox" Grid.Column="1"
                         Text="{Binding Messages.ToBeSentText, UpdateSourceTrigger=PropertyChanged}"   
                         TextWrapping="Wrap" VerticalAlignment="Center" Height="50"/>
                            <Grid Grid.Column="2">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="30"/>
                                    <RowDefinition Height="30"/>
                                </Grid.RowDefinitions>
                                <CheckBox x:Name="HEXCheckBox" Grid.Row="0"
                         HorizontalAlignment="Center" VerticalAlignment="Bottom"
                         IsChecked="{Binding Messages.IsHEX, UpdateSourceTrigger=PropertyChanged}"
                         Content="Отправка HEX" Cursor=""/>
                                <CheckBox x:Name="CRLFCheckBox" Grid.Row="1"
                         HorizontalAlignment="Center"
                         Content="+\n в конце строки" VerticalAlignment="Center"/>
                            </Grid>
                        </Grid>
                    </Grid>
                </Grid>
            </Grid>
        </Grid>
    </Grid>
</Window>