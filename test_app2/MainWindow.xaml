<Window x:Class="test_app2.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:custom="clr-namespace:System.IO.Ports;assembly=System"
        xmlns:viewmodels="clr-namespace:test_app2.ViewModels"
        xmlns:Converters="clr-namespace:test_app2.Converters"
        xmlns:UI="clr-namespace:test_app2.UI"
        xmlns:System="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        Closing="Window_Closing"
        Title="Aboba" Height="720" Width="1280"
        MinWidth="1280"
        Style="{DynamicResource CustomWindowStyle}">
    <Window.Resources>
        <ObjectDataProvider x:Key="PortParitySettingsViewModel" 
                            MethodName="GetValues"
                            ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="custom:Parity"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="PortStopSettingsViewModel" 
                            MethodName="GetValues"
                            ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="custom:StopBits"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <Converters:BoolToIsConnectedConverter x:Key="BoolToIsConnectedConverter"/>
        <Style x:Key="GreyDataGrid" TargetType="DataGrid">
            <Setter Property="Foreground" Value="#FF2F2F2F">
            </Setter>
        </Style>
        <Style x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type DataGridCell}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Border x:Name="border"
                BorderBrush="Transparent"
                BorderThickness="1"
                Background="Transparent"
                SnapsToDevicePixels="True">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Unfocused" />
                                    <VisualState x:Name="Focused" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CurrentStates">
                                    <VisualState x:Name="Regular" />
                                    <VisualState x:Name="Current">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="border"
                                                Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="White" />
                                            </ColorAnimationUsingKeyFrames
                                                >
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="VerticalContentAlignment"
          Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="Red"/>
        </Style>
    </Window.Resources>
    <Window.DataContext>
        <viewmodels:MainViewModel/>
    </Window.DataContext>
    <Grid Margin="5">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="150*"/>
                <ColumnDefinition Width="5"/>
                <ColumnDefinition Width="800"/>
            </Grid.ColumnDefinitions>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="180*"/>
                    <RowDefinition Height="170*"/>
                    <RowDefinition Height="340"/>
                </Grid.RowDefinitions>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <!--Grid HorizontalAlignment="Left" VerticalAlignment="Top" Width="320" Height="210" Margin="0,0,0,480"-->
                    <TextBlock x:Name="COMConnectionTextBlock" HorizontalAlignment="Left" Margin="10,10,0,0" TextWrapping="Wrap" Text="COM-порт:" VerticalAlignment="Top"/>
                    <TextBlock x:Name="COMName" HorizontalAlignment="Right" Margin="10,10,30,0" TextWrapping="Wrap" Text="{Binding SerialPort.Settings.SelectedCOMPort}" VerticalAlignment="Top"/>
                    <TextBlock x:Name="COMBaudRateTextBlock" HorizontalAlignment="Left" Margin="10,10,0,0" Grid.Row="1" TextWrapping="Wrap" Text="Скорость, бод/c:" VerticalAlignment="Top"/>
                    <TextBlock x:Name="COMBaudRate" HorizontalAlignment="Right" Margin="10,10,30,0" Grid.Row="1" TextWrapping="Wrap" Text="{Binding SerialPort.Settings.SelectedBaudRate}" VerticalAlignment="Top"/>
                    <TextBlock x:Name="LFIDeviceType" HorizontalAlignment="Left" Margin="10,10,0,0" Grid.Row="2" TextWrapping="Wrap" Text="Тип устройства:" VerticalAlignment="Top"/>
                    <TextBlock x:Name="LFIDeviceTypeModel" HorizontalAlignment="Right" Margin="10,10,30,0" Grid.Row="2" TextWrapping="Wrap" Text="{Binding FaultIndicator.DeviceModel}" VerticalAlignment="Top"/>
                    <TextBlock x:Name="LFIDeviceFamily" HorizontalAlignment="Left" Margin="10,10,0,0" Grid.Row="3" TextWrapping="Wrap" Text="Семейство устройства:" VerticalAlignment="Top"/>
                    <TextBlock x:Name="LFIDeviceFamilyModel" HorizontalAlignment="Right" Margin="10,10,30,0" Grid.Row="3" TextWrapping="Wrap" Text="{Binding FaultIndicator.DeviceFamily}" VerticalAlignment="Top"/>
                    <Grid Grid.Row="5" Cursor="">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Button  x:Name="COMOpenClosePortMainButton" 
                      Command="{Binding SerialPort.AutoConnectDisconnectCommand, Mode=OneTime}"
                      Content="{Binding SerialPort.IsConnected, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BoolToIsConnectedConverter}}" 
                      VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Cursor="Hand"
                      />
                        <Button x:Name="COMConfButton" Grid.Column="1"
                      Command="{Binding Config.ConfigCommand, Mode=OneTime}"
                      Content="Конфигурация" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Grid.Row="5"
                      />
                    </Grid>
                    <!--Для кнопок
                    Width="83" Background="#FFA5D6A7"
                      BorderBrush="#FF388E3C" Foreground="#FF1B5E20" BorderThickness="0,0,0,0"/-->
                </Grid>
                <Grid Grid.Row="1">
                    <GroupBox Header="Параметры для связи с индикаторами">
                        <Grid>
                            <TextBlock x:Name="CallFreqtextBlock" HorizontalAlignment="Left" TextWrapping="Wrap" Text="Адрес вызова" VerticalAlignment="Top" Margin="5,10,0,0"/>
                            <TextBlock x:Name="CallAddrtextBlock" HorizontalAlignment="Left" TextWrapping="Wrap" Text="Частота вызова" VerticalAlignment="Top" Margin="5,40,0,0"/>
                            <TextBlock x:Name="CallTimetextBlock" HorizontalAlignment="Left" TextWrapping="Wrap" Text="Время вызова" VerticalAlignment="Top" Margin="5,70,0,0"/>
                            <TextBlock x:Name="WaitTimetextBlock" HorizontalAlignment="Left" TextWrapping="Wrap" Text="Время ожидания ответа" VerticalAlignment="Top" Margin="5,100,0,0"/>
                            <TextBox x:Name="CallFreqtextBox" HorizontalAlignment="Center" Margin="175,8,0,0" TextWrapping="Wrap" Text="" VerticalAlignment="Top" Width="100"/>
                            <TextBox x:Name="CallAddrtextBox" HorizontalAlignment="Center" Margin="175,38,0,0" TextWrapping="Wrap" Text="" VerticalAlignment="Top" Width="100"/>
                            <TextBox x:Name="CallTimetextBox" HorizontalAlignment="Center" Margin="175,68,0,0" TextWrapping="Wrap" Text="" VerticalAlignment="Top" Width="100"/>
                            <TextBox x:Name="WaitTimetextBox" HorizontalAlignment="Center" Margin="175,98,0,0" TextWrapping="Wrap" Text="" VerticalAlignment="Top" Width="100"/>
                        </Grid>
                    </GroupBox>
                </Grid>
                <Grid Grid.Row="2">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="275*"/>
                        <RowDefinition Height="55*"/>
                    </Grid.RowDefinitions>
                    <GroupBox Header="Сообщения">
                        <Grid>
                            <TextBox
                         TextWrapping="Wrap" 
                         VerticalScrollBarVisibility="Auto" 
                         AcceptsReturn="True"
                         Text="{Binding Messages.MessagesText, UpdateSourceTrigger=PropertyChanged}"
                         FontSize="12"
                         IsReadOnly="true"
                         Margin="0,0,0,0"/>
                        </Grid>
                    </GroupBox>
                    <Grid Grid.Row="1">
                        <Button x:Name="SendButton" Margin="5,0,0,0" Command="{Binding Messages.SendMessageCommand, Mode=OneTime}"
                         Content="Отправить" HorizontalAlignment="Left" VerticalAlignment="Center" Height="45" Width="137"/>
                        <CheckBox x:Name="HEXCheckBox"
                         Margin="320,0,10,5" HorizontalAlignment="Right" VerticalAlignment="Bottom"
                         IsChecked="{Binding Messages.IsHEX, UpdateSourceTrigger=PropertyChanged}"
                         Content="Отправка HEX" Cursor=""/>
                        <CheckBox x:Name="CRLFCheckBox"
                         Margin="320,5,10,10" HorizontalAlignment="Right"
                         Content="+\n в конце строки" VerticalAlignment="Top"/>
                        <TextBox x:Name="COMInputTextBox"
                         Text="{Binding Messages.ToBeSentText, UpdateSourceTrigger=PropertyChanged}"   
                         Margin="150,0,150,0" TextWrapping="Wrap" VerticalAlignment="Center" Height="45">
                        </TextBox>
                    </Grid>
                </Grid>
            </Grid>
            <Grid Grid.Column="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="450"/>
                    <RowDefinition Height="5"/>
                    <RowDefinition Height="150*"/>
                </Grid.RowDefinitions>
                <Grid>
                    <Grid.Resources>
                        <x:Array x:Key="BaseParameters" Type="{x:Type System:String}">
                            <System:String>Величина электрического поля (в В/м)</System:String>
                            <System:String>Минимальное значение тока в линии (в А)</System:String>
                            <System:String>Интервал отправки телеизмерений №1 (в с)</System:String>
                            <System:String>Интервал отправки телеизмерений №2 (в с)</System:String>
                            <System:String>Период отключения датчиков (в мин)</System:String>
                            <System:String>Порог значения тока отправки телеизмерений (в А)</System:String>
                            <System:String>Относительное значение тока (в %)</System:String>
                            <System:String>Абсолютное значение изменения тока (в А)</System:String>
                        </x:Array>
                        <x:Array x:Key="InterphaseShortCircuitParameters" Type="{x:Type System:String}">
                            <System:String>Величина электрического поля (в В/м)</System:String>
                            <System:String>Минимальное значение тока в линии (в А)</System:String>
                            <System:String>Интервал отправки телеизмерений №1 (в с)</System:String>
                            <System:String>Интервал отправки телеизмерений №2 (в с)</System:String>
                            <System:String>Период отключения датчиков (в мин)</System:String>
                            <System:String>Порог значения тока отправки телеизмерений (в А)</System:String>
                            <System:String>Относительное значение тока (в %)</System:String>
                            <System:String>Абсолютное значение изменения тока (в А)</System:String>
                        </x:Array>
                    </Grid.Resources>
                    <!--ScrollViewer/-->
                    <!--DataGrid x:Name="dataGrid" d:ItemsSource="{d:SampleData ItemCount=5}" Margin="0,0,0,97"/-->
                    <GroupBox x:Name="IndicatorParamsGroupBox" Header="Значения в памяти индикатора">
                        <TabControl x:Name="IndicatorParamsTabControl">
                            <TabItem Header="Общие параметры индикатора" Width="190" Height="30">
                                <Grid>
                                    <DataGrid x:Name="IndicatorBaseDataGrid" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                              AutoGenerateColumns="False" Style="{StaticResource GreyDataGrid}" Background="#FF2F2F2F" Foreground="#FFFF" ItemsSource="{Binding Indicators, Mode=OneWay}"
                                              RowHeight="45" RowBackground="#FF2F2F2F" AlternatingRowBackground="#FF2F2F2F" GridLinesVisibility="None" BorderBrush="#FF2F2F2F">
                                        <DataGrid.Resources>
                                            <Style x:Key="errorStyle" TargetType="{x:Type TextBox}">
                                                <Setter Property="Padding" Value="-2"/>
                                                <Style.Triggers>
                                                    <Trigger Property="Validation.HasError" Value="True">
                                                        <Setter Property="Background" Value="Red"/>
                                                        <Setter Property="ToolTip" 
                                                        Value="{Binding RelativeSource={RelativeSource Self},
                                                        Path=(Validation.Errors)[0].ErrorContent}"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                            <!--Style TargetType="DataGridCell">
                                                <Setter Property="HorizontalAlignment" Value="Center" />
                                                <Setter Property="VerticalAlignment" Value="Center" />
                                            </Style-->
                                        </DataGrid.Resources>
                                        <DataGrid.Columns>
                                            <DataGridTextColumn Header="{Binding Source={StaticResource BaseParameters}, Path=[0]}" Binding="{Binding CallAdress, StringFormat=d}"/>
                                        </DataGrid.Columns>
                                        <DataGrid.ColumnHeaderStyle>
                                            <Style TargetType="{x:Type DataGridColumnHeader}">
                                                <Setter Property="Background" Value="#FF2F2F2F"/>
                                                <Setter Property="BorderBrush" Value="DarkSlateGray"/>
                                                <Setter Property="BorderThickness" Value="1, 2"/>
                                                <Setter Property="FontWeight" Value="SemiBold"/>
                                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                <Setter Property="Padding" Value="5"/>
                                            </Style>
                                        </DataGrid.ColumnHeaderStyle>
                                        <DataGrid.RowStyle>
                                            <Style TargetType="{x:Type DataGridRow}">
                                                <Setter Property="Height" Value="{x:Static System:Double.NaN}"/>
                                            </Style>
                                        </DataGrid.RowStyle>
                                        <DataGrid.RowHeaderStyle>
                                            <Style TargetType="{x:Type DataGridRowHeader}">
                                                <Setter Property="Background" Value="#FF2F2F2F"/>
                                                <Setter Property="BorderBrush" Value="DarkSlateGray"/>
                                                <Setter Property="BorderThickness" Value="2, 1"/>
                                                <Setter Property="FontWeight" Value="SemiBold"/>
                                                <Setter Property="Padding" Value="5"/>
                                            </Style>
                                        </DataGrid.RowHeaderStyle>
                                        <!--DataGrid.RowHeaderTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type DataGridRow}}, Path=Item.Day}"/>
                                            </DataTemplate>
                                        </DataGrid.RowHeaderTemplate-->
                                        <DataGrid.CellStyle>
                                            <Style TargetType="{x:Type DataGridCell}">
                                                <Setter Property="HorizontalAlignment" Value="Center" />
                                                <Setter Property="VerticalAlignment" Value="Center" />
                                            </Style>
                                        </DataGrid.CellStyle>
                                    </DataGrid>
                                </Grid>
                            </TabItem>
                            <TabItem Header="Параметры определения межфазного замыкания" Width="300" Height="30">
                                <Grid Background="#FF2F2F2F">
                                    <DataGrid x:Name="IndicatorBasokDataGrid" Style="{StaticResource GreyDataGrid}">
                                        <DataGrid.Columns>
                                            <DataGridTextColumn Header="Params" Binding="{Binding BaseParameters[0]}" />
                                            <DataGridTemplateColumn Header="Birthday">
                                            </DataGridTemplateColumn>
                                        </DataGrid.Columns>
                                    </DataGrid>
                                </Grid>
                            </TabItem>
                            <TabItem Header="Параметры определения замыкания на землю" Width="280" Height="30">
                                <Grid Background="#FF2F2F2F">
                                </Grid>
                            </TabItem>
                        </TabControl>
                    </GroupBox>
                </Grid>
                <Grid Grid.Column="2" Grid.Row="2">
                    <GroupBox x:Name="SendParamsGroupBox" Header="Информация о параметрах передачи">
                    </GroupBox>
                </Grid>
            </Grid>
        </Grid>
    </Grid>
</Window>